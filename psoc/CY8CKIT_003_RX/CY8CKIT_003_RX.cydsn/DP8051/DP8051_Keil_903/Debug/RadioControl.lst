C51 COMPILER V9.03   RADIOCONTROL                                                          08/24/2012 16:01:37 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE RADIOCONTROL
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_903\Debug\RadioControl.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\2.0\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe 
                    -.\RadioControl.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_903\Debug\RadioControl.lst) CD DB NOIP OT(2,SIZE) 
                    -INCDIR(Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_903\Debug\RadioControl.obj)

line level    source

   1          
   2          #include <device.h>
   3          #include "RadioRegs.h"
   4          #include "RadioChannel.h"
   5          
   6          void RadioWrite(uint8 Address, uint8 Data)
   7          {
   8   1              //while(!Button_Read());
   9   1              
  10   1              SS_Write(0);            // Tell the Radio to listen for a command from the SPI Master device
  11   1              
  12   1      //      LED_Control_Reg_Write(WRITE_ONE_BYTE | Address); // For troubleshooting
  13   1              
  14   1              while (!( RadioController_ReadStatus() & RadioController_STS_TX_FIFO_EMPTY )); // Wait for SPIM to become
             - ready for Tx
  15   1              RadioController_WriteTxData(WRITE_ONE_BYTE | Address);                   // The MSB must be set for a write command
  16   1                                                                                                                               // The 6 LSBs are the only bits used for the address
  17   1          while (!( RadioController_ReadStatus() & RadioController_STS_BYTE_COMPLETE ));
  18   1              RadioController_ReadRxData();                   // Must read SPIM Rx buffer before continuing 
  19   1                                                                      // These are junk bits, but a read is still necessary to clear certain flags
  20   1              
  21   1              //LED_Control_Reg_Write(CyRadio_ReadRxData());
  22   1              CyDelay(1);
  23   1              
  24   1              //while(!Button_Read());
  25   1              
  26   1      //      LED_Control_Reg_Write(Data);
  27   1              
  28   1              while (!( RadioController_ReadStatus() & RadioController_STS_TX_FIFO_EMPTY ));
  29   1              RadioController_WriteTxData(Data);              // Data byte must be written immediately after the address byte
  30   1          while (!( RadioController_ReadStatus() & RadioController_STS_BYTE_COMPLETE ));
  31   1              RadioController_ReadRxData();                   // A junk read must be performed again before continuing
  32   1              
  33   1              SS_Write(1);            // Tell the radio that the master is done communicating for now
  34   1              
  35   1              //LED_Control_Reg_Write(CyRadio_ReadRxData());
  36   1              CyDelay(1);
  37   1      }
  38          
  39          uint8 RadioRead(uint8 Address)
  40          {
  41   1              uint8 readBuffer = 0x00;
  42   1              
  43   1              //while(!Button_Read());
  44   1              //delay(4);
  45   1              
  46   1              SS_Write(0);                    // Tell the Radio to listen for a command from the SPI Master device
  47   1              
  48   1              while (!( RadioController_ReadStatus() & RadioController_STS_TX_FIFO_EMPTY ));
  49   1              RadioController_WriteTxData(READ_ONE_BYTE | Address);   // The MSB must be cleared for a read command
  50   1          while (!( RadioController_ReadStatus() & RadioController_STS_BYTE_COMPLETE ));
  51   1              if( RadioController_GetRxBufferSize() > 0 )
  52   1              {
C51 COMPILER V9.03   RADIOCONTROL                                                          08/24/2012 16:01:37 PAGE 2   

  53   2                      RadioController_ReadRxData();                   // Must read SPIM Rx buffer before continuing 
  54   2                                                                              // These are junk bits, but a read is still necessary to clear certain flags
  55   2              }
  56   1              
  57   1              //LED_Control_Reg_Write(CyRadio_ReadRxData());
  58   1              CyDelay(1);
  59   1              
  60   1              //while(!Button_Read());
  61   1              //delay(4);
  62   1              
  63   1              while (!( RadioController_ReadStatus() & RadioController_STS_TX_FIFO_EMPTY ));
  64   1              RadioController_WriteTxData(0x00);                      // Must send something to the slave to initiate transfer
  65   1                                                                              // This is a junk byte and can be discarded
  66   1          while (!( RadioController_ReadStatus() & RadioController_STS_BYTE_COMPLETE ));
  67   1              if( RadioController_GetRxBufferSize() > 0 )
  68   1              {
  69   2                      readBuffer = RadioController_ReadRxData();              // This is the data that is stored at the stated address.
  70   2              }
  71   1              SS_Write(1);
  72   1              
  73   1              //LED_Control_Reg_Write(CyRadio_ReadRxData());
  74   1              CyDelay(1);
  75   1              
  76   1              return readBuffer;
  77   1      }
C51 COMPILER V9.03   RADIOCONTROL                                                          08/24/2012 16:01:37 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _RadioWrite (BEGIN)
                                           ; SOURCE LINE # 6
0000 900000      R     MOV     DPTR,#Address
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
0005 900000      R     MOV     DPTR,#Data
0008 ED                MOV     A,R5
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 7
                                           ; SOURCE LINE # 10
000A 7F00              MOV     R7,#00H
000C 120000      E     LCALL   _SS_Write
000F         ?C0001:
                                           ; SOURCE LINE # 14
000F 120000      E     LCALL   RadioController_ReadStatus
0012 7E00              MOV     R6,#00H
0014 EF                MOV     A,R7
0015 30E1F7            JNB     ACC.1,?C0001
0018         ?C0002:
                                           ; SOURCE LINE # 15
0018 900000      R     MOV     DPTR,#Address
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
001D EF                MOV     A,R7
001E 4480              ORL     A,#080H
0020 FF                MOV     R7,A
0021 120000      E     LCALL   _RadioController_WriteTxData
0024         ?C0003:
                                           ; SOURCE LINE # 17
0024 120000      E     LCALL   RadioController_ReadStatus
0027 7E00              MOV     R6,#00H
0029 EF                MOV     A,R7
002A 30E3F7            JNB     ACC.3,?C0003
002D         ?C0004:
                                           ; SOURCE LINE # 18
002D 120000      E     LCALL   RadioController_ReadRxData
                                           ; SOURCE LINE # 22
0030 7F01              MOV     R7,#01H
0032 7E00              MOV     R6,#00H
0034 7D00              MOV     R5,#00H
0036 7C00              MOV     R4,#00H
0038 120000      E     LCALL   _?CyDelay
003B         ?C0005:
                                           ; SOURCE LINE # 28
003B 120000      E     LCALL   RadioController_ReadStatus
003E 7E00              MOV     R6,#00H
0040 EF                MOV     A,R7
0041 30E1F7            JNB     ACC.1,?C0005
0044         ?C0006:
                                           ; SOURCE LINE # 29
0044 900000      R     MOV     DPTR,#Data
0047 E0                MOVX    A,@DPTR
0048 FF                MOV     R7,A
0049 120000      E     LCALL   _RadioController_WriteTxData
004C         ?C0007:
                                           ; SOURCE LINE # 30
004C 120000      E     LCALL   RadioController_ReadStatus
004F 7E00              MOV     R6,#00H
0051 EF                MOV     A,R7
C51 COMPILER V9.03   RADIOCONTROL                                                          08/24/2012 16:01:37 PAGE 4   

0052 30E3F7            JNB     ACC.3,?C0007
0055         ?C0008:
                                           ; SOURCE LINE # 31
0055 120000      E     LCALL   RadioController_ReadRxData
                                           ; SOURCE LINE # 33
0058 7F01              MOV     R7,#01H
005A 120000      E     LCALL   _SS_Write
                                           ; SOURCE LINE # 36
005D 7F01              MOV     R7,#01H
005F 7E00              MOV     R6,#00H
0061 7D00              MOV     R5,#00H
0063 7C00              MOV     R4,#00H
0065 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 37
0068 22                RET     
             ; FUNCTION _RadioWrite (END)

             ; FUNCTION _RadioRead (BEGIN)
                                           ; SOURCE LINE # 39
0000 900000      R     MOV     DPTR,#Address
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 40
                                           ; SOURCE LINE # 41
0005 900000      R     MOV     DPTR,#readBuffer
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 46
000A 7F00              MOV     R7,#00H
000C 120000      E     LCALL   _SS_Write
000F         ?C0010:
                                           ; SOURCE LINE # 48
000F 120000      E     LCALL   RadioController_ReadStatus
0012 7E00              MOV     R6,#00H
0014 EF                MOV     A,R7
0015 30E1F7            JNB     ACC.1,?C0010
0018         ?C0011:
                                           ; SOURCE LINE # 49
0018 900000      R     MOV     DPTR,#Address
001B E0                MOVX    A,@DPTR
001C FF                MOV     R7,A
001D 120000      E     LCALL   _RadioController_WriteTxData
0020         ?C0012:
                                           ; SOURCE LINE # 50
0020 120000      E     LCALL   RadioController_ReadStatus
0023 7E00              MOV     R6,#00H
0025 EF                MOV     A,R7
0026 30E3F7            JNB     ACC.3,?C0012
0029         ?C0013:
                                           ; SOURCE LINE # 51
0029 120000      E     LCALL   RadioController_GetRxBufferSize
002C EF                MOV     A,R7
002D D3                SETB    C
002E 9400              SUBB    A,#00H
0030 4003              JC      ?C0014
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 53
0032 120000      E     LCALL   RadioController_ReadRxData
                                           ; SOURCE LINE # 55
0035         ?C0014:
                                           ; SOURCE LINE # 58
0035 7F01              MOV     R7,#01H
C51 COMPILER V9.03   RADIOCONTROL                                                          08/24/2012 16:01:37 PAGE 5   

0037 7E00              MOV     R6,#00H
0039 7D00              MOV     R5,#00H
003B 7C00              MOV     R4,#00H
003D 120000      E     LCALL   _?CyDelay
0040         ?C0015:
                                           ; SOURCE LINE # 63
0040 120000      E     LCALL   RadioController_ReadStatus
0043 7E00              MOV     R6,#00H
0045 EF                MOV     A,R7
0046 30E1F7            JNB     ACC.1,?C0015
0049         ?C0016:
                                           ; SOURCE LINE # 64
0049 7F00              MOV     R7,#00H
004B 120000      E     LCALL   _RadioController_WriteTxData
004E         ?C0017:
                                           ; SOURCE LINE # 66
004E 120000      E     LCALL   RadioController_ReadStatus
0051 7E00              MOV     R6,#00H
0053 EF                MOV     A,R7
0054 30E3F7            JNB     ACC.3,?C0017
0057         ?C0018:
                                           ; SOURCE LINE # 67
0057 120000      E     LCALL   RadioController_GetRxBufferSize
005A EF                MOV     A,R7
005B D3                SETB    C
005C 9400              SUBB    A,#00H
005E 4008              JC      ?C0019
                                           ; SOURCE LINE # 68
                                           ; SOURCE LINE # 69
0060 120000      E     LCALL   RadioController_ReadRxData
0063 900000      R     MOV     DPTR,#readBuffer
0066 EF                MOV     A,R7
0067 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 70
0068         ?C0019:
                                           ; SOURCE LINE # 71
0068 7F01              MOV     R7,#01H
006A 120000      E     LCALL   _SS_Write
                                           ; SOURCE LINE # 74
006D 7F01              MOV     R7,#01H
006F 7E00              MOV     R6,#00H
0071 7D00              MOV     R5,#00H
0073 7C00              MOV     R4,#00H
0075 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 76
0078 900000      R     MOV     DPTR,#readBuffer
007B E0                MOVX    A,@DPTR
007C FF                MOV     R7,A
                                           ; SOURCE LINE # 77
007D         ?C0020:
007D 22                RET     
             ; FUNCTION _RadioRead (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    231    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.03   RADIOCONTROL                                                          08/24/2012 16:01:37 PAGE 6   

   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
